substitutions:
  device_name: dimmer1
  friendly_name: Dimmer 1

esphome:
  name: ${device_name}

esp32:
  board: m5stack-atom
  framework:
    type: arduino

# Status LED:
#light:
#  - name: ${name} Light
#    platform: fastled_clockless
#    chipset: SK6812
#    pin: 27
#    num_leds: 1
#    rgb_order: GRB
#    id: status_led

output:
  - platform: ledc
    pin: GPIO22
    id: gpio_22
    frequency: 10kHz

light:
  - platform: monochromatic
    output: gpio_22
    name: ${friendly_name} Light
    id: dimmer

binary_sensor:
  - platform: gpio
    pin:
      number: 39
      inverted: true
    name: ${friendly_name} Button
    on_press:
      if:
        condition:
          - light.is_on: dimmer
        then:
          - light.turn_off:
              id: dimmer
              transition_length: 0s
          - mqtt.publish_json:
              topic: ${device_name}/value
              payload: |-
                root["source"] = "${device_name}";
                root["value"] = 0.0;
        else:
          - light.turn_on:
              id: dimmer
              brightness: 1.0
              transition_length: 0s
          - mqtt.publish_json:
              topic: ${device_name}/value
              payload: |-
                root["source"] = "${device_name}";
                root["value"] = 1.0;

mqtt:
  broker: pi1.lan
  discovery: false
  log_topic:
    topic: ${device_name}/log
    level: NONE
  keepalive: 5s
  on_json_message:
    topic: ${device_name}/value
    then:
      - light.turn_on:
          id: dimmer
          brightness: !lambda 'return x["value"];'
          transition_length: 0s

logger:
  level: NONE

ota:
  password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Fallback Hotspot"
    password: !secret wifi_password

captive_portal:



